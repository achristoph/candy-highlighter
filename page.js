// Generated by CoffeeScript 1.6.2
(function() {
  var pxh, pxw, _gaq;

  _gaq = _gaq || [];

  _gaq.push(['_setAccount', 'UA-41315960-1']);

  _gaq.push(['_trackPageview']);

  (function() {
    var ga, s;

    ga = document.createElement('script');
    ga.type = 'text/javascript';
    ga.async = true;
    ga.src = 'https://ssl.google-analytics.com/ga.js';
    s = document.getElementsByTagName('script')[0];
    return s.parentNode.insertBefore(ga, s);
  })();

  pxw = 72;

  pxh = 64;

  $(function() {
    var canvas, canvas_height, canvas_width, clear_canvas, fillColor, send_msg, _ref;

    _ref = ["648", "576"], canvas_width = _ref[0], canvas_height = _ref[1];
    clear_canvas = function() {
      var canvas, ctx;

      canvas = document.getElementById("canvas");
      ctx = canvas.getContext('2d');
      return ctx.clearRect(0, 0, canvas.width, canvas.height);
    };
    send_msg = function() {
      return chrome.runtime.sendMessage({
        msg: 'done',
        scroll_pos: [window.scrollX, window.scrollY]
      }, function(response) {
        var candies_in_grid, ctx, t, _i, _len, _ref1, _results;

        candies_in_grid = response.bg;
        ctx = document.getElementById("canvas").getContext('2d');
        _ref1 = ['3', '4', '5', 'T', 'L'];
        _results = [];
        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
          t = _ref1[_i];
          _results.push(fillColor(ctx, candies_in_grid, t));
        }
        return _results;
      });
    };
    if ($("#canvas").length) {
      $("#canvas").show();
      clear_canvas();
      setTimeout(send_msg, 10);
    } else {
      canvas = document.createElement("canvas");
      canvas.setAttribute("id", "canvas");
      canvas.setAttribute("width", canvas_width);
      canvas.setAttribute("height", canvas_height);
      $("body").append(canvas);
    }
    $("#canvas").mousedown(function(e) {
      var ctx;

      canvas = document.getElementById("canvas");
      ctx = canvas.getContext('2d');
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      return $("#canvas").hide();
    });
    return fillColor = function(ctx, candies_in_grid, type) {
      var candy, fill_color, row, _i, _len, _results;

      fill_color = (function() {
        switch (false) {
          case type !== '3':
            return "rgba(255, 255, 0, 0.3)";
          case type !== '4':
            return "rgba(255, 0, 0, 0.3)";
          case type !== '5':
            return "rgba(0, 255, 0, 0.3)";
          case type !== 'T':
            return "rgba(0, 255, 255, 0.3)";
          case type !== 'L':
            return "rgba(0, 255, 255, 0.3)";
        }
      })();
      ctx.fillStyle = fill_color;
      _results = [];
      for (_i = 0, _len = candies_in_grid.length; _i < _len; _i++) {
        row = candies_in_grid[_i];
        _results.push((function() {
          var _j, _len1, _results1;

          _results1 = [];
          for (_j = 0, _len1 = row.length; _j < _len1; _j++) {
            candy = row[_j];
            if (candy.is_matched && candy.type === type) {
              _results1.push(ctx.fillRect(pxw * candy.col, pxh * candy.row, pxw, pxh));
            } else {
              _results1.push(void 0);
            }
          }
          return _results1;
        })());
      }
      return _results;
    };
  });

}).call(this);
